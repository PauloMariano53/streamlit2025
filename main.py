import streamlit as st
import pandas as pd



def calc_general_stats(df):
    df_data = df.groupby(by='Data')[['Valor']].sum()
    df_data['lag_1'] = df_data['Valor'].shift(1)
    df_data['diferen√ßa Mensal'] = df_data['Valor'] -df_data ['lag_1']
    df_data['M√©dia 6 M diferen√ßa Mensal'] = df_data['diferen√ßa Mensal'].rolling(6).mean()
    df_data['M√©dia 12 M diferen√ßa Mensal'] = df_data['diferen√ßa Mensal'].rolling(12).mean()
    df_data['M√©dia 24 M diferen√ßa Mensal'] = df_data['diferen√ßa Mensal'].rolling(24).mean()
    df_data['M√©dia 6 M TOTAL'] = df_data['Valor'].rolling(6).apply(lambda x: x[-1] - x[0])
    df_data['M√©dia 12 M TOTAL'] = df_data['Valor'].rolling(12).apply(lambda x: x[-1] - x[0])
    df_data['M√©dia 24 M TOTAL'] = df_data['Valor'].rolling(24).apply(lambda x: x[-1] - x[0])
    return df_data




st.set_page_config(page_title='Finan√ßas',page_icon='üí∞')

st.text('Ol√° Mundo!')

st.markdown('''
# BOAS VINDAS!
## NOSSO APP Financeiro!

Expero que curta a experi√™ncia
''')


file_upload = st.file_uploader(label='Fa√ßa upload dos dados aqui',type='csv')
if file_upload:
    #leitura dos dados
    df = pd.read_csv(file_upload)
    df['Data'] = pd.to_datetime(df['Data'], format='%d/%m/%Y').dt.date
    
    #exibi√ß√£o dos dados
    exp1 = st.expander('Dados Brutos')
    columns_fmt ={'Valor': st.column_config.NumberColumn('Valor',format="dollar")}
    exp1.dataframe(df,hide_index=True,column_config=columns_fmt)
     
    #Visao isntitiui√ß√£o
    exp2=st.expander('Intitui√ß√µes')
    df_instituicao = df.pivot_table(index='Data', columns='Institui√ß√£o', values='Valor')
    tab_data,tab_history,tab_share = exp2.tabs(['Dados','Hist√≥rico','Distribui√ß√£o'])


    # Abas para distribui√ß√£o dos dados
    with tab_data:
        st.dataframe(df_instituicao)

    with tab_history:
        st.line_chart(df_instituicao)
    
    with tab_share:

        date=st.selectbox('Filtro data',options=df_instituicao.index)

        
       # date = st.date_input('Data para distribui√ß√£o',
       #                     min_value=df_instituicao.index.min(),
       #                     max_value=df_instituicao.index.max())
      
       
        if date not in df_instituicao.index:
            st.warning('Selecione uma data v√°lida')
        #obetm a √∫ltima data de dados, para o gr√°fico
        else:
            st.bar_chart(df_instituicao.loc[date])
    

    
    df_stats = calc_general_stats(df)
    st.dataframe(df_stats)


